<!DOCTYPE UI><UI version="3.2" stdsetdef="1">
<class>HostProps</class>
<widget class="QWidget">
    <property name="name">
        <cstring>HostProps</cstring>
    </property>
    <property name="geometry">
        <rect>
            <x>0</x>
            <y>0</y>
            <width>333</width>
            <height>332</height>
        </rect>
    </property>
    <grid>
        <property name="name">
            <cstring>unnamed</cstring>
        </property>
        <property name="margin">
            <number>0</number>
        </property>
        <property name="spacing">
            <number>6</number>
        </property>
        <widget class="QGroupBox" row="0" column="0" rowspan="1" colspan="2">
            <property name="name">
                <cstring>propertiesGrp</cstring>
            </property>
            <property name="sizePolicy">
                <sizepolicy>
                    <hsizetype>5</hsizetype>
                    <vsizetype>0</vsizetype>
                    <horstretch>0</horstretch>
                    <verstretch>0</verstretch>
                </sizepolicy>
            </property>
            <property name="minimumSize">
                <size>
                    <width>180</width>
                    <height>0</height>
                </size>
            </property>
            <property name="frameShape">
                <enum>Box</enum>
            </property>
            <property name="frameShadow">
                <enum>Sunken</enum>
            </property>
            <property name="title">
                <string>Host Properties</string>
            </property>
            <vbox>
                <property name="name">
                    <cstring>unnamed</cstring>
                </property>
                <property name="margin">
                    <number>11</number>
                </property>
                <property name="spacing">
                    <number>6</number>
                </property>
                <widget class="QLabel">
                    <property name="name">
                        <cstring>TextLabel1</cstring>
                    </property>
                    <property name="text">
                        <string>&amp;Name/address:</string>
                    </property>
                    <property name="buddy" stdset="0">
                        <cstring>nameEdit</cstring>
                    </property>
                </widget>
                <widget class="QLineEdit">
                    <property name="name">
                        <cstring>nameEdit</cstring>
                    </property>
                    <property name="frameShape">
                        <enum>LineEditPanel</enum>
                    </property>
                    <property name="frameShadow">
                        <enum>Sunken</enum>
                    </property>
                    <property name="whatsThis" stdset="0">
                        <string>&lt;b&gt;Name / Address field&lt;/b&gt;
&lt;p&gt;
Here you can enter the host name or address.&lt;br&gt;
The host may be specified in a number of ways:
&lt;p&gt;
&lt;i&gt;single host&lt;/i&gt;
&lt;p&gt;
 This is the most common format. You may specify a host either by an abbreviated name recognized by the resolver, the fully qualified domain name, or an IP address.
&lt;/p&gt;

&lt;i&gt;netgroups&lt;/i&gt;
&lt;p&gt;
 NIS netgroups may be given as @group. Only the host part of each netgroup members is consider in checking for membership. Empty host parts or those containing a single dash (-) are ignored.
&lt;/p&gt;

&lt;i&gt;wildcards&lt;/i&gt;
&lt;p&gt;
 Machine names may contain the wildcard characters * and ?. This can be used to make the exports file more compact; for instance, *.cs.foo.edu matches all hosts in the domain cs.foo.edu. However, these wildcard characters do not match the dots in a domain name, so the above pattern does not include hosts such as a.b.cs.foo.edu.
&lt;/p&gt;

&lt;i&gt;IP networks&lt;/i&gt;
&lt;p&gt;
 You can also export directories to all hosts on an IP (sub-) network simultaneously. This is done by specifying an IP address and netmask pair as address/netmask where the netmask can be specified in dotted-decimal format, or as a contiguous mask length (for example, either `/255.255.252.0' or `/22' appended to the network base address result in identical subnetworks with 10 bits of host).
&lt;/p&gt;</string>
                    </property>
                </widget>
                <widget class="QCheckBox">
                    <property name="name">
                        <cstring>publicChk</cstring>
                    </property>
                    <property name="text">
                        <string>&amp;Public access</string>
                    </property>
                    <property name="whatsThis" stdset="0">
                        <string>&lt;b&gt;Public access&lt;/b&gt;
&lt;p&gt;
If you check this, the host address will be a single wildcard , which means public access.
This is just the same as if you would enter a wildcard in the address field.
&lt;/p&gt;</string>
                    </property>
                </widget>
            </vbox>
        </widget>
        <widget class="QGroupBox" row="1" column="0">
            <property name="name">
                <cstring>GroupBox7</cstring>
            </property>
            <property name="sizePolicy">
                <sizepolicy>
                    <hsizetype>5</hsizetype>
                    <vsizetype>5</vsizetype>
                    <horstretch>0</horstretch>
                    <verstretch>0</verstretch>
                </sizepolicy>
            </property>
            <property name="title">
                <string>Options</string>
            </property>
            <grid>
                <property name="name">
                    <cstring>unnamed</cstring>
                </property>
                <property name="margin">
                    <number>11</number>
                </property>
                <property name="spacing">
                    <number>6</number>
                </property>
                <widget class="QCheckBox" row="0" column="0">
                    <property name="name">
                        <cstring>readOnlyChk</cstring>
                    </property>
                    <property name="text">
                        <string>&amp;Writable</string>
                    </property>
                    <property name="whatsThis" stdset="0">
                        <string>&lt;b&gt;Writable&lt;/b&gt;
&lt;p&gt;
Allow both read and write requests on this NFS volume.
&lt;/p&gt;
&lt;p&gt;
The default is to disallow any request which changes the filesystem
&lt;/p&gt;</string>
                    </property>
                </widget>
                <widget class="QCheckBox" row="1" column="0">
                    <property name="name">
                        <cstring>secureChk</cstring>
                    </property>
                    <property name="text">
                        <string>&amp;Insecure</string>
                    </property>
                    <property name="whatsThis" stdset="0">
                        <string>&lt;b&gt;Insecure&lt;/b&gt;
&lt;p&gt;
If this option is checked, it is not required that requests originate on an internet port less than IPPORT_RESERVED (1024).
&lt;/p&gt;
&lt;p&gt;
If unsure leave it unchecked.
&lt;/p&gt;</string>
                    </property>
                </widget>
                <widget class="QCheckBox" row="2" column="0">
                    <property name="name">
                        <cstring>syncChk</cstring>
                    </property>
                    <property name="text">
                        <string>&amp;Sync</string>
                    </property>
                    <property name="whatsThis" stdset="0">
                        <string>&lt;b&gt;Sync&lt;/b&gt;
&lt;p&gt;
This option requests that all file writes be committed to disk before the write request completes. This is required for complete safety of data in the face of a server crash, but incurs a performance hit.
&lt;/p&gt;
&lt;p&gt;
The default is to allow the server to write the data out whenever it is ready.
&lt;/p&gt;</string>
                    </property>
                </widget>
                <widget class="QCheckBox" row="3" column="0">
                    <property name="name">
                        <cstring>wdelayChk</cstring>
                    </property>
                    <property name="enabled">
                        <bool>false</bool>
                    </property>
                    <property name="text">
                        <string>No w&amp;delay</string>
                    </property>
                    <property name="whatsThis" stdset="0">
                        <string>&lt;b&gt;No wdelay&lt;/b&gt;
&lt;p&gt;
This option only has effect if sync is also set. The NFS server will normally delay committing a write request to disk slightly if it suspects that another related write request may be in progress or may arrive soon. This allows multiple write requests to be committed to disk with the one operation which can improve performance. If an NFS server received mainly small unrelated requests, this behavior could actually reduce performance, so no wdelay is available to turn it off. &lt;/p&gt;</string>
                    </property>
                </widget>
                <widget class="QCheckBox" row="4" column="0">
                    <property name="name">
                        <cstring>hideChk</cstring>
                    </property>
                    <property name="text">
                        <string>No &amp;hide</string>
                    </property>
                    <property name="whatsThis" stdset="0">
                        <string>&lt;b&gt;No hide&lt;/b&gt;
&lt;p&gt;
This option is based on the option of the same name provided in IRIX NFS. Normally, if a server exports two filesystems one of which is mounted on the other, then the client will have to mount both filesystems explicitly to get access to them. If it just mounts the parent, it will see an empty directory at the place where the other filesystem is mounted. That filesystem is "hidden".
&lt;/p&gt;
&lt;p&gt;
Setting the nohide option on a filesystem causes it not to be hidden, and an appropriately authorized client will be able to move from the parent to that filesystem without noticing the change.
&lt;/p&gt;
&lt;p&gt;
However, some NFS clients do not cope well with this situation as, for instance, it is then possible for two files in the one apparent filesystem to have the same inode number.
&lt;/p&gt;
&lt;p&gt;
The nohide option is currently only effective on single host exports. It does not work reliably with netgroup, subnet, or wildcard exports.
&lt;/p&gt;
&lt;p&gt;
This option can be very useful in some situations, but it should be used with due care, and only after confirming that the client system copes with the situation effectively.
&lt;/p&gt;</string>
                    </property>
                </widget>
                <widget class="QCheckBox" row="5" column="0">
                    <property name="name">
                        <cstring>subtreeChk</cstring>
                    </property>
                    <property name="text">
                        <string>No su&amp;btree check</string>
                    </property>
                    <property name="whatsThis" stdset="0">
                        <string>&lt;b&gt;No subtree check&lt;/b&gt;
&lt;p&gt;
This option disables subtree checking, which has mild security implications, but can improve reliability is some circumstances.
&lt;/p&gt;
&lt;p&gt;
If a subdirectory of a filesystem is exported, but the whole filesystem is not, then whenever a NFS request arrives, the server must check not only that the accessed file is in the appropriate filesystem (which is easy) but also that it is in the exported tree (which is harder). This check is called the subtree_check.
&lt;/p&gt;
&lt;p&gt;
In order to perform this check, the server must include some information about the location of the file in the "filehandle" that is given to the client. This can cause problems with accessing files that are renamed while a client has them open (though in many simple cases it will still work).
&lt;/p&gt;
&lt;p&gt;
subtree checking is also used to make sure that files inside directories to which only root has access can only be accessed if the filesystem is exported with no_root_squash (see below), even the file itself allows more general access.
&lt;/p&gt;
&lt;p&gt;
As a general guide, a home directory filesystem, which is normally exported at the root and may see lots of file renames, should be exported with subtree checking disabled. A filesystem which is mostly read-only, and at least does not see many file renames (e.g. /usr or /var) and for which subdirectories may be exported, should probably be exported with subtree checks enabled.
&lt;/p&gt;</string>
                    </property>
                </widget>
                <widget class="QCheckBox" row="6" column="0">
                    <property name="name">
                        <cstring>secureLocksChk</cstring>
                    </property>
                    <property name="text">
                        <string>Insecure loc&amp;ks</string>
                    </property>
                    <property name="whatsThis" stdset="0">
                        <string>&lt;b&gt;Insecure locks&lt;/b&gt;
&lt;p&gt;
This option tells the NFS server not to require authentication of locking requests (i.e. requests which use the NLM protocol). Normally the NFS server will require a lock request to hold a credential for a user who has read access to the file. With this flag no access checks will be performed.
&lt;/p&gt;
&lt;p&gt;
Early NFS client implementations did not send credentials with lock requests, and many current NFS clients still exist which are based on the old implementations. Use this flag if you find that you can only lock files which are world readable.
&lt;/p&gt;</string>
                    </property>
                </widget>
            </grid>
        </widget>
        <widget class="QGroupBox" row="1" column="1">
            <property name="name">
                <cstring>GroupBox3</cstring>
            </property>
            <property name="sizePolicy">
                <sizepolicy>
                    <hsizetype>5</hsizetype>
                    <vsizetype>7</vsizetype>
                    <horstretch>0</horstretch>
                    <verstretch>0</verstretch>
                </sizepolicy>
            </property>
            <property name="title">
                <string>User Mapping</string>
            </property>
            <property name="alignment">
                <set>AlignAuto</set>
            </property>
            <vbox>
                <property name="name">
                    <cstring>unnamed</cstring>
                </property>
                <property name="margin">
                    <number>11</number>
                </property>
                <property name="spacing">
                    <number>6</number>
                </property>
                <widget class="QCheckBox">
                    <property name="name">
                        <cstring>allSquashChk</cstring>
                    </property>
                    <property name="text">
                        <string>All s&amp;quash</string>
                    </property>
                    <property name="whatsThis" stdset="0">
                        <string>&lt;b&gt;All squash&lt;/b&gt;
&lt;p&gt;
Map all uids and gids to the anonymous user. Useful for NFS-exported public FTP directories, news spool directories, etc. &lt;/p&gt;</string>
                    </property>
                </widget>
                <widget class="QCheckBox">
                    <property name="name">
                        <cstring>rootSquashChk</cstring>
                    </property>
                    <property name="text">
                        <string>No &amp;root squash</string>
                    </property>
                    <property name="whatsThis" stdset="0">
                        <string>&lt;b&gt;No root squash&lt;/b&gt;
&lt;p&gt;
Turn of root squashing. This option is mainly useful for diskless clients.
&lt;/p&gt;
&lt;i&gt;root squashing&lt;/i&gt;
&lt;p&gt;
Map requests from uid/gid 0 to the anonymous uid/gid. Note that this does not apply to any other uids that might be equally sensitive, such as user bin.
&lt;/p&gt;</string>
                    </property>
                </widget>
                <widget class="QLayoutWidget">
                    <property name="name">
                        <cstring>layout15</cstring>
                    </property>
                    <hbox>
                        <property name="name">
                            <cstring>unnamed</cstring>
                        </property>
                        <widget class="QLabel">
                            <property name="name">
                                <cstring>TextLabel1_2</cstring>
                            </property>
                            <property name="text">
                                <string>Anonym. &amp;UID:</string>
                            </property>
                            <property name="buddy" stdset="0">
                                <cstring>anonuidEdit</cstring>
                            </property>
                            <property name="whatsThis" stdset="0">
                                <string>&lt;b&gt;Anonym. UID/GID&lt;/b&gt; &lt;p&gt; These options explicitly set the uid and gid of the anonymous account. This option is primarily useful for PC/NFS clients, where you might want all requests appear to be from one user. &lt;/p&gt;</string>
                            </property>
                        </widget>
                        <widget class="QLineEdit">
                            <property name="name">
                                <cstring>anonuidEdit</cstring>
                            </property>
                            <property name="sizePolicy">
                                <sizepolicy>
                                    <hsizetype>5</hsizetype>
                                    <vsizetype>0</vsizetype>
                                    <horstretch>100</horstretch>
                                    <verstretch>0</verstretch>
                                </sizepolicy>
                            </property>
                            <property name="minimumSize">
                                <size>
                                    <width>50</width>
                                    <height>0</height>
                                </size>
                            </property>
                            <property name="text">
                                <string>FF</string>
                            </property>
                        </widget>
                    </hbox>
                </widget>
                <widget class="QLayoutWidget">
                    <property name="name">
                        <cstring>layout16</cstring>
                    </property>
                    <hbox>
                        <property name="name">
                            <cstring>unnamed</cstring>
                        </property>
                        <widget class="QLabel">
                            <property name="name">
                                <cstring>TextLabel2</cstring>
                            </property>
                            <property name="text">
                                <string>Anonym. &amp;GID:</string>
                            </property>
                            <property name="buddy" stdset="0">
                                <cstring>anongidEdit</cstring>
                            </property>
                            <property name="whatsThis" stdset="0">
                                <string>&lt;b&gt;Anonym. UID/GID&lt;/b&gt; &lt;p&gt; These options explicitly set the uid and gid of the anonymous account. This option is primarily useful for PC/NFS clients, where you might want all requests appear to be from one user. &lt;/p&gt;</string>
                            </property>
                        </widget>
                        <widget class="QLineEdit">
                            <property name="name">
                                <cstring>anongidEdit</cstring>
                            </property>
                            <property name="sizePolicy">
                                <sizepolicy>
                                    <hsizetype>4</hsizetype>
                                    <vsizetype>0</vsizetype>
                                    <horstretch>0</horstretch>
                                    <verstretch>0</verstretch>
                                </sizepolicy>
                            </property>
                            <property name="minimumSize">
                                <size>
                                    <width>50</width>
                                    <height>0</height>
                                </size>
                            </property>
                            <property name="text">
                                <string>FF</string>
                            </property>
                        </widget>
                    </hbox>
                </widget>
            </vbox>
        </widget>
        <spacer row="2" column="0">
            <property name="name">
                <cstring>spacer3</cstring>
            </property>
            <property name="orientation">
                <enum>Vertical</enum>
            </property>
            <property name="sizeType">
                <enum>Expanding</enum>
            </property>
            <property name="sizeHint">
                <size>
                    <width>20</width>
                    <height>16</height>
                </size>
            </property>
        </spacer>
    </grid>
</widget>
<connections>
    <connection>
        <sender>publicChk</sender>
        <signal>toggled(bool)</signal>
        <receiver>nameEdit</receiver>
        <slot>setDisabled(bool)</slot>
    </connection>
    <connection>
        <sender>readOnlyChk</sender>
        <signal>clicked()</signal>
        <receiver>HostProps</receiver>
        <slot>setModified()</slot>
    </connection>
    <connection>
        <sender>secureChk</sender>
        <signal>clicked()</signal>
        <receiver>HostProps</receiver>
        <slot>setModified()</slot>
    </connection>
    <connection>
        <sender>syncChk</sender>
        <signal>clicked()</signal>
        <receiver>HostProps</receiver>
        <slot>setModified()</slot>
    </connection>
    <connection>
        <sender>wdelayChk</sender>
        <signal>pressed()</signal>
        <receiver>HostProps</receiver>
        <slot>setModified()</slot>
    </connection>
    <connection>
        <sender>subtreeChk</sender>
        <signal>pressed()</signal>
        <receiver>HostProps</receiver>
        <slot>setModified()</slot>
    </connection>
    <connection>
        <sender>secureLocksChk</sender>
        <signal>pressed()</signal>
        <receiver>HostProps</receiver>
        <slot>setModified()</slot>
    </connection>
    <connection>
        <sender>allSquashChk</sender>
        <signal>pressed()</signal>
        <receiver>HostProps</receiver>
        <slot>setModified()</slot>
    </connection>
    <connection>
        <sender>rootSquashChk</sender>
        <signal>pressed()</signal>
        <receiver>HostProps</receiver>
        <slot>setModified()</slot>
    </connection>
    <connection>
        <sender>nameEdit</sender>
        <signal>textChanged(const QString&amp;)</signal>
        <receiver>HostProps</receiver>
        <slot>setModified()</slot>
    </connection>
    <connection>
        <sender>hideChk</sender>
        <signal>clicked()</signal>
        <receiver>HostProps</receiver>
        <slot>setModified()</slot>
    </connection>
    <connection>
        <sender>syncChk</sender>
        <signal>toggled(bool)</signal>
        <receiver>wdelayChk</receiver>
        <slot>setEnabled(bool)</slot>
    </connection>
    <connection>
        <sender>anonuidEdit</sender>
        <signal>textChanged(const QString&amp;)</signal>
        <receiver>HostProps</receiver>
        <slot>setModified()</slot>
    </connection>
    <connection>
        <sender>anongidEdit</sender>
        <signal>textChanged(const QString&amp;)</signal>
        <receiver>HostProps</receiver>
        <slot>setModified()</slot>
    </connection>
</connections>
<includes>
    <include location="local" impldecl="in implementation">hostprops.ui.h</include>
</includes>
<signals>
    <signal>modified()</signal>
</signals>
<slots>
    <slot>setModified()</slot>
</slots>
<layoutdefaults spacing="6" margin="11"/>
</UI>
